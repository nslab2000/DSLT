
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
   <LinearGradientBrush x:Key="ForegroundBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Offset="0.0" Color="#000000"/>
      <GradientStop Offset="1.0" Color="#696969"/>
   </LinearGradientBrush>
   <LinearGradientBrush x:Key="onMouseBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Offset="0.0" Color="#303030"/>
      <GradientStop Offset="1.0" Color="#A0A0A0"/>
   </LinearGradientBrush>
   <LinearGradientBrush x:Key="BorderBrush" StartPoint="0,1" EndPoint="0,0.3">
      <GradientStop Offset="0.0" Color="#000000"/>
      <GradientStop Offset="1.0" Color="#A0A0A0"/>
   </LinearGradientBrush>
   <LinearGradientBrush x:Key="MenuBackBrush" StartPoint="0,0" EndPoint="0,1">
      <GradientStop Offset="1.0" Color="#303030"/>
      <GradientStop Offset="0.0" Color="#505050"/>
   </LinearGradientBrush>
   <!-- SimpleStyles: Menu -->
   <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="Foreground" Value="#DDDDDD"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Menu}">
               <Border Background="{StaticResource MenuBackBrush}" BorderBrush="#404040" BorderThickness="1">
                  <StackPanel ClipToBounds="True" IsItemsHost="True" Orientation="Horizontal"/>
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!-- SimpleStyles: ContextMenu -->
   <Style TargetType="{x:Type ContextMenu}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
      <Setter Property="HasDropShadow" Value="True"/>
      <Setter Property="Foreground" Value="#DDDDDD"/>
        <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ContextMenu}">
               <Border
                  Name="Border"
                  Background="#505050"
                  BorderBrush="#404040"
                  BorderThickness="1">
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="HasDropShadow" Value="true">
                     <Setter TargetName="Border" Property="Padding" Value="0,0,0,0"/>
                     <Setter TargetName="Border" Property="CornerRadius" Value="0"/>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!-- SimpleStyles: MenuItem -->
   <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
      <Setter Property="Height" Value="1"/>
      <Setter Property="Margin" Value="0,4,0,4"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Separator}">
               <Border BorderBrush="#888888" BorderThickness="1"/>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!-- TopLevelHeader -->
   <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
      <Border Name="Border">
         <Grid>
            <ContentPresenter Margin="12,3,12,3" ContentSource="Header" RecognizesAccessKey="True"/>
            <Popup
               Name="Popup"
               AllowsTransparency="True"
               Focusable="False"
               IsOpen="{TemplateBinding IsSubmenuOpen}"
               Placement="Bottom"
               PopupAnimation="Fade">
               <Border
                  Name="SubmenuBorder"
                  Background="#505050"
                  BorderBrush="#888888"
                  BorderThickness="1"
                  SnapsToDevicePixels="True">
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
               </Border>
            </Popup>
         </Grid>
      </Border>
      <ControlTemplate.Triggers>
         <Trigger Property="IsSuspendingPopupAnimation" Value="true">
            <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
         </Trigger>
         <Trigger Property="IsHighlighted" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#696969"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
         </Trigger>
         <Trigger Property="Popup.AllowsTransparency" SourceName="Popup" Value="True">
            <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,2,2"/>
            <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0"/>
         </Trigger>
         <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="#696969"/>
         </Trigger>
      </ControlTemplate.Triggers>
   </ControlTemplate>
   <!-- TopLevelItem -->
   <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
      <Border Name="Border">
         <Grid>
            <ContentPresenter Margin="12,3,12,3" ContentSource="Header" RecognizesAccessKey="True"/>
         </Grid>
      </Border>
      <ControlTemplate.Triggers>
         <Trigger Property="IsHighlighted" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#C0C0C0"/>
            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
         </Trigger>
         <Trigger Property="IsEnabled" Value="False">
            <Setter Property="Foreground" Value="#888888"/>
         </Trigger>
      </ControlTemplate.Triggers>
   </ControlTemplate>
   <!-- SubmenuItem -->
   <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
      <Border Name="Border">
         <Grid>
            <Grid.ColumnDefinitions>
               <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
               <ColumnDefinition Width="*"/>
               <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
               <ColumnDefinition Width="13"/>
            </Grid.ColumnDefinitions>
            <ContentPresenter
               Name="Icon"
               Margin="6,0,6,0"
               VerticalAlignment="Center"
               ContentSource="Icon"/>
            <Border
               Name="Check"
               Width="13"
               Height="13"
               Margin="6,0,6,0"
               Background="#C0C0C0"
               BorderBrush="#404040"
               BorderThickness="1"
               Visibility="Collapsed">
               <Path
                  Name="CheckMark"
                  Width="7"
                  Height="7"
                  Data="M 0 0 L 7 7 M 0 7 L 7 0"
                  SnapsToDevicePixels="False"
                  Stroke="#404040"
                  StrokeThickness="2"
                  Visibility="Hidden"/>
            </Border>
            <ContentPresenter
               Name="HeaderHost"
               Grid.Column="1"
               ContentSource="Header"
               RecognizesAccessKey="True"/>
            <TextBlock
               x:Name="InputGestureText"
               Grid.Column="2"
               Margin="30,0,6,0"
               DockPanel.Dock="Right"
               Text="{TemplateBinding InputGestureText}"/>
         </Grid>
      </Border>
      <ControlTemplate.Triggers>
         <Trigger Property="Icon" Value="{x:Null}">
            <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
         </Trigger>
         <Trigger Property="IsChecked" Value="true">
            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
         </Trigger>
         <Trigger Property="IsCheckable" Value="true">
            <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
            <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
         </Trigger>
         <Trigger Property="IsHighlighted" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#A0A0A0"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
         </Trigger>
         <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="#888888"/>
         </Trigger>
      </ControlTemplate.Triggers>
   </ControlTemplate>
   <!-- SubmenuHeader -->
   <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
      <Border Name="Border" Padding="13,0,0,0">
         <Grid>
            <Grid.ColumnDefinitions>
               <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
               <ColumnDefinition Width="*"/>
               <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
               <ColumnDefinition Width="13"/>
            </Grid.ColumnDefinitions>
            <ContentPresenter
               Name="Icon"
               Margin="6,0,6,0"
               VerticalAlignment="Center"
               ContentSource="Icon"/>
            <ContentPresenter
               Name="HeaderHost"
               Grid.Column="1"
               ContentSource="Header"
               RecognizesAccessKey="True"/>
            <TextBlock
               x:Name="InputGestureText"
               Grid.Column="2"
               Margin="30,0,6,0"
               DockPanel.Dock="Right"
               Text="{TemplateBinding InputGestureText}"/>
            <Path
               Grid.Column="3"
               HorizontalAlignment="Center"
               VerticalAlignment="Center"
               Data="M 0 0 L 0 7 L 4 3.5 Z"
               Fill="#FFFFFF"/>
            <Popup
               Name="Popup"
               AllowsTransparency="True"
               Focusable="False"
               HorizontalOffset="0"
               IsOpen="{TemplateBinding IsSubmenuOpen}"
               Placement="Right"
               PopupAnimation="Fade">
               <Border
                  Name="SubmenuBorder"
                  Background="#505050"
                  BorderBrush="#888888"
                  BorderThickness="1"
                  SnapsToDevicePixels="True">
                  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
               </Border>
            </Popup>
         </Grid>
      </Border>
      <ControlTemplate.Triggers>
         <Trigger Property="Icon" Value="{x:Null}">
            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
         </Trigger>
         <Trigger Property="IsHighlighted" Value="true">
            <Setter TargetName="Border" Property="Background" Value="#A0A0A0"/>
         </Trigger>
         <Trigger Property="Popup.AllowsTransparency" SourceName="Popup" Value="True">
            <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,2,2,0"/>
            <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,0"/>
         </Trigger>
         <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="#888888"/>
         </Trigger>
      </ControlTemplate.Triggers>
   </ControlTemplate>
   <!-- MenuItem Style -->
   <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Style.Triggers>
         <Trigger Property="Role" Value="TopLevelHeader">
            <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
            <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
         </Trigger>
         <Trigger Property="Role" Value="TopLevelItem">
            <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
         </Trigger>
         <Trigger Property="Role" Value="SubmenuHeader">
            <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
         </Trigger>
         <Trigger Property="Role" Value="SubmenuItem">
            <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
         </Trigger>
      </Style.Triggers>
   </Style>
   <!-- SimpleStyles: Label -->
   <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Foreground" Value="#FFFFFF"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Label}">
               <Border>
                  <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsEnabled" Value="false">
                     <Setter Property="Foreground" Value="#AAAAAA"/>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!-- SimpleStyles: Slider -->
   <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
      <Setter Property="SnapsToDevicePixels" Value="true"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="IsTabStop" Value="false"/>
      <Setter Property="Focusable" Value="false"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type RepeatButton}">
               <Border Background="Transparent"/>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
      <Setter Property="SnapsToDevicePixels" Value="true"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="Height" Value="14"/>
      <Setter Property="Width" Value="14"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Thumb}">
               <Ellipse
                  Name="Ellipse"
                  Fill="{StaticResource ForegroundBrush}"
                  Stroke="{StaticResource BorderBrush}"
                  StrokeThickness="1"/>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource onMouseBrush}"/>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="false">
                     <Setter TargetName="Ellipse" Property="Fill" Value="#696969"/>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
      <Grid>
         <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}"/>
            <RowDefinition Height="Auto"/>
         </Grid.RowDefinitions>
         <TickBar
            Name="TopTick"
            Height="4"
            Fill="#404040"
            Placement="Top"
            SnapsToDevicePixels="True"
            Visibility="Collapsed"/>
         <Border
            Name="TrackBackground"
            Height="4"
            Grid.Row="1"
            Margin="0"
            Background="#404040"
            BorderBrush="#404040"
            BorderThickness="1"
            CornerRadius="2"/>
         <Track Name="PART_Track" Grid.Row="1">
            <Track.DecreaseRepeatButton>
               <RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderButtonStyle}"/>
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
               <Thumb Style="{StaticResource SliderThumbStyle}"/>
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
               <RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderButtonStyle}"/>
            </Track.IncreaseRepeatButton>
         </Track>
         <TickBar
            Name="BottomTick"
            Height="4"
            Grid.Row="2"
            Fill="{TemplateBinding Foreground}"
            Placement="Bottom"
            SnapsToDevicePixels="True"
            Visibility="Collapsed"/>
      </Grid>
      <ControlTemplate.Triggers>
         <Trigger Property="TickPlacement" Value="TopLeft">
            <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
         </Trigger>
         <Trigger Property="TickPlacement" Value="BottomRight">
            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
         </Trigger>
         <Trigger Property="TickPlacement" Value="Both">
            <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
         </Trigger>
      </ControlTemplate.Triggers>
   </ControlTemplate>
   <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
      <Grid>
         <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition MinWidth="{TemplateBinding Slider.MinWidth}" Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
         </Grid.ColumnDefinitions>
         <TickBar
            Name="TopTick"
            Width="4"
            Fill="#404040"
            Placement="Left"
            SnapsToDevicePixels="True"
            Visibility="Collapsed"/>
         <Border
            Name="TrackBackground"
            Width="4"
            Grid.Column="1"
            Margin="0"
            Background="#404040"
            BorderBrush="#404040"
            BorderThickness="1"
            CornerRadius="2"/>
         <Track Name="PART_Track" Grid.Column="1">
            <Track.DecreaseRepeatButton>
               <RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource SliderButtonStyle}"/>
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
               <Thumb Style="{StaticResource SliderThumbStyle}"/>
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
               <RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource SliderButtonStyle}"/>
            </Track.IncreaseRepeatButton>
         </Track>
         <TickBar
            Name="BottomTick"
            Width="4"
            Grid.Column="2"
            Fill="{TemplateBinding Foreground}"
            Placement="Right"
            SnapsToDevicePixels="True"
            Visibility="Collapsed"/>
      </Grid>
      <ControlTemplate.Triggers>
         <Trigger Property="TickPlacement" Value="TopLeft">
            <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
         </Trigger>
         <Trigger Property="TickPlacement" Value="BottomRight">
            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
         </Trigger>
         <Trigger Property="TickPlacement" Value="Both">
            <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
         </Trigger>
      </ControlTemplate.Triggers>
   </ControlTemplate>
   <Style TargetType="{x:Type Slider}">
      <Setter Property="SnapsToDevicePixels" Value="true"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Style.Triggers>
         <Trigger Property="Orientation" Value="Horizontal">
            <Setter Property="MinWidth" Value="104"/>
            <Setter Property="MinHeight" Value="21"/>
            <Setter Property="Template" Value="{StaticResource HorizontalSlider}"/>
         </Trigger>
         <Trigger Property="Orientation" Value="Vertical">
            <Setter Property="MinWidth" Value="21"/>
            <Setter Property="MinHeight" Value="104"/>
            <Setter Property="Template" Value="{StaticResource VerticalSlider}"/>
         </Trigger>
      </Style.Triggers>
   </Style>
   <!-- SimpleStyles: TextBox -->
   <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
      <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
      <Setter Property="MinWidth" Value="20"/>
      <Setter Property="MinHeight" Value="10"/>
      <Setter Property="AllowDrop" Value="true"/>
      <Setter Property="Foreground" Value="#FFFFFF"/>
      <Setter Property="CaretBrush" Value="#FFFFFF"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBoxBase}">
               <Border
                  Name="Border"
                  Background="#505050"
                  BorderBrush="#AAAAAA"
                  BorderThickness="1"
                  CornerRadius="2"
                  Padding="2">
                  <ScrollViewer x:Name="PART_ContentHost" Margin="0"/>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter TargetName="Border" Property="Background" Value="#696969"/>
                     <Setter TargetName="Border" Property="BorderBrush" Value="#888888"/>
                     <Setter Property="Foreground" Value="#AAAAAA"/>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!-- SimpleStyles: GroupBox -->
   <Style TargetType="{x:Type GroupBox}">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type GroupBox}">
               <Grid>
                  <Grid.RowDefinitions>
                     <RowDefinition Height="Auto"/>
                     <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Border
                     Grid.Row="0"
                     Background="#505050"
                     BorderBrush="#AAAAAA"
                     BorderThickness="1"
                     CornerRadius="4,4,0,0">
                     <ContentPresenter Margin="6,0,6,0" ContentSource="Header" RecognizesAccessKey="True"/>
                  </Border>
                  <Border
                     Grid.Row="1"
                     Background="#696969"
                     BorderBrush="#AAAAAA"
                     BorderThickness="1,0,1,1"
                     CornerRadius="0,0,4,4"
                     Padding="0,6,0,10">
                     <ContentPresenter Margin="0"/>
                  </Border>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!-- SimpleStyles: CheckBox -->
   <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
      <Setter Property="SnapsToDevicePixels" Value="true"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="Foreground" Value="#FFFFFF"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type CheckBox}">
               <BulletDecorator Background="Transparent">
                  <BulletDecorator.Bullet>
                     <Border
                        x:Name="Border"
                        Width="13"
                        Height="13"
                        Background="#505050"
                        BorderBrush="#AAAAAA"
                        BorderThickness="1"
                        CornerRadius="0">
                        <Path
                           x:Name="CheckMark"
                           Width="7"
                           Height="7"
                           Data="M 0 7 L 7 0"
                           SnapsToDevicePixels="False"
                           Stroke="#FFFFFF"
                           StrokeThickness="2"/>
                     </Border>
                  </BulletDecorator.Bullet>
                  <ContentPresenter
                     HorizontalAlignment="Left"
                     Margin="4,0,0,0"
                     VerticalAlignment="Center"
                     RecognizesAccessKey="True"/>
               </BulletDecorator>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsChecked" Value="false">
                     <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                  </Trigger>
                  <Trigger Property="IsChecked" Value="{x:Null}">
                     <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0"/>
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="true">
                     <Setter TargetName="Border" Property="Background" Value="#888888"/>
                  </Trigger>
                  <Trigger Property="IsPressed" Value="true">
                     <Setter TargetName="Border" Property="Background" Value="#AAAAAA"/>
                     <Setter TargetName="Border" Property="BorderBrush" Value="#DDDDDD"/>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="false">
                     <Setter TargetName="Border" Property="Background" Value="#696969"/>
                     <Setter TargetName="Border" Property="BorderBrush" Value="#888888"/>
                     <Setter Property="Foreground" Value="#AAAAAA"/>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
    <!-- SimpleStyles: ScrollViewer -->
   <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="Focusable" Value="false"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type RepeatButton}">
               <Border
                  Name="Border"
                  Margin="1"
                  Background="#505050"
                  BorderBrush="#505050"
                  BorderThickness="1"
                  CornerRadius="2">
                  <Path
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}"
                     Fill="#FFFFFF"/>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsPressed" Value="true">
                     <Setter TargetName="Border" Property="Background" Value="#A0A0A0"/>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="false">
                     <Setter Property="Foreground" Value="#888888"/>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="IsTabStop" Value="false"/>
      <Setter Property="Focusable" Value="false"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type RepeatButton}">
               <Border Background="Transparent"/>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="IsTabStop" Value="false"/>
      <Setter Property="Focusable" Value="false"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Thumb}">
               <Border
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="1"
                  CornerRadius="2"/>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
      <Grid>
         <Grid.RowDefinitions>
            <RowDefinition MaxHeight="18"/>
            <RowDefinition Height="0.00001*"/>
            <RowDefinition MaxHeight="18"/>
         </Grid.RowDefinitions>
         <Border Grid.RowSpan="3" Background="#AAAAAA" CornerRadius="2"/>
         <RepeatButton
            Height="18"
            Grid.Row="0"
            Command="ScrollBar.LineUpCommand"
            Content="M 0 4 L 8 4 L 4 0 Z"
            Style="{StaticResource ScrollBarLineButton}"/>
         <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
            <Track.DecreaseRepeatButton>
               <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}"/>
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
               <Thumb
                  Margin="1,0,1,0"
                  Background="#505050"
                  BorderBrush="#505050"
                  Style="{StaticResource ScrollBarThumb}"/>
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
               <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}"/>
            </Track.IncreaseRepeatButton>
         </Track>
         <RepeatButton
            Height="18"
            Grid.Row="3"
            Command="ScrollBar.LineDownCommand"
            Content="M 0 0 L 4 4 L 8 0 Z"
            Style="{StaticResource ScrollBarLineButton}"/>
      </Grid>
   </ControlTemplate>
   <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
      <Grid>
         <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="18"/>
            <ColumnDefinition Width="0.00001*"/>
            <ColumnDefinition MaxWidth="18"/>
         </Grid.ColumnDefinitions>
         <Border Grid.ColumnSpan="3" Background="#696969" CornerRadius="2"/>
         <RepeatButton
            Width="18"
            Grid.Column="0"
            Command="ScrollBar.LineLeftCommand"
            Content="M 4 0 L 4 8 L 0 4 Z"
            Style="{StaticResource ScrollBarLineButton}"/>
         <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
            <Track.DecreaseRepeatButton>
               <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}"/>
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
               <Thumb
                  Margin="0,1,0,1"
                  Background="#505050"
                  BorderBrush="#505050"
                  Style="{StaticResource ScrollBarThumb}"/>
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
               <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}"/>
            </Track.IncreaseRepeatButton>
         </Track>
         <RepeatButton
            Width="18"
            Grid.Column="3"
            Command="ScrollBar.LineRightCommand"
            Content="M 0 0 L 4 4 L 0 8 Z"
            Style="{StaticResource ScrollBarLineButton}"/>
      </Grid>
   </ControlTemplate>
   <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Style.Triggers>
         <Trigger Property="Orientation" Value="Horizontal">
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
         </Trigger>
         <Trigger Property="Orientation" Value="Vertical">
            <Setter Property="Width" Value="18"/>
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
         </Trigger>
      </Style.Triggers>
   </Style>
   <Style x:Key="LeftScrollViewer" TargetType="{x:Type ScrollViewer}">
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollViewer}">
               <Grid>
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="Auto"/>
                     <ColumnDefinition/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                     <RowDefinition/>
                     <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <ScrollContentPresenter Grid.Column="1"/>
                  <ScrollBar
                     Name="PART_VerticalScrollBar"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     Value="{TemplateBinding VerticalOffset}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                  <ScrollBar
                     Name="PART_HorizontalScrollBar"
                     Grid.Column="1"
                     Grid.Row="1"
                     Maximum="{TemplateBinding ScrollableWidth}"
                     Orientation="Horizontal"
                     Value="{TemplateBinding HorizontalOffset}"
                     ViewportSize="{TemplateBinding ViewportWidth}"
                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!-- SimpleStyles: Button -->
   <Style TargetType="{x:Type Button}">
      <Setter Property="SnapsToDevicePixels" Value="true"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="MinHeight" Value="23"/>
      <Setter Property="MinWidth" Value="75"/>
      <Setter Property="Foreground" Value="#FFFFFF"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
               <Border
                  x:Name="Border"
                  Background="#808080"
                  BorderBrush="#AAAAAA"
                  BorderThickness="1"
                  CornerRadius="2">
                  <ContentPresenter
                     HorizontalAlignment="Center"
                     Margin="2"
                     VerticalAlignment="Center"
                     RecognizesAccessKey="True"/>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsKeyboardFocused" Value="true">
                     <Setter TargetName="Border" Property="BorderBrush" Value="#BBBBBB"/>
                  </Trigger>
                  <Trigger Property="IsDefaulted" Value="true">
                     <Setter TargetName="Border" Property="BorderBrush" Value="#BBBBBB"/>
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="true">
                     <Setter TargetName="Border" Property="Background" Value="#AAAAAA"/>
                     <Setter TargetName="Border" Property="BorderBrush" Value="#DDDDDD"/>
                  </Trigger>
                  <Trigger Property="IsPressed" Value="true">
                     <Setter TargetName="Border" Property="Background" Value="#E0E0E0"/>
                     <Setter TargetName="Border" Property="BorderBrush" Value="#FFFFFF"/>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="false">
                     <Setter TargetName="Border" Property="Background" Value="#696969"/>
                     <Setter TargetName="Border" Property="BorderBrush" Value="#888888"/>
                     <Setter Property="Foreground" Value="#AAAAAA"/>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!-- SimpleStyles: RadioButton -->
   <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
      <Setter Property="SnapsToDevicePixels" Value="true"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="Foreground" Value="#FFFFFF"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type RadioButton}">
               <BulletDecorator Background="Transparent">
                  <BulletDecorator.Bullet>
                     <Grid Width="13" Height="13">
                        <Ellipse
                           x:Name="Border"
                           Fill="#505050"
                           Stroke="#AAAAAA"
                           StrokeThickness="1"/>
                        <Ellipse x:Name="CheckMark" Margin="4" Fill="#FFFFFF"/>
                     </Grid>
                  </BulletDecorator.Bullet>
                  <ContentPresenter
                     HorizontalAlignment="Left"
                     Margin="4,0,0,0"
                     VerticalAlignment="Center"
                     RecognizesAccessKey="True"/>
               </BulletDecorator>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsChecked" Value="false">
                     <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="true">
                     <Setter TargetName="Border" Property="Fill" Value="#888888"/>
                  </Trigger>
                  <Trigger Property="IsPressed" Value="true">
                     <Setter TargetName="Border" Property="Fill" Value="#AAAAAA"/>
                     <Setter TargetName="Border" Property="Stroke" Value="#DDDDDD"/>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="false">
                     <Setter TargetName="Border" Property="Fill" Value="#696969"/>
                     <Setter TargetName="Border" Property="Stroke" Value="#888888"/>
                     <Setter Property="Foreground" Value="#AAAAAA"/>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
</ResourceDictionary>